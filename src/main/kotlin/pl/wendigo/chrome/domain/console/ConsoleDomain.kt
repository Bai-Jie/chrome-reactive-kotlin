package pl.wendigo.chrome.domain.console

/**
 * This domain is deprecated - use Runtime or Log instead.
 *
 * This class was autogenerated by main.go. Do not edit :)
 */
@pl.wendigo.chrome.ProtocolDeprecated class ConsoleDomain internal constructor(private val connection : pl.wendigo.chrome.RemoteChromeConnection) {

	/**
	 * Enables console domain, sends the messages collected so far to the client by means of the <code>messageAdded</code> notification.
	 */
	fun enable() : io.reactivex.Flowable<pl.wendigo.chrome.GenericResponse> {
        return connection.runAndCaptureResponse("$domainName.enable", null, pl.wendigo.chrome.GenericResponse::class.java)
	}

	/**
	 * Disables console domain, prevents further console messages from being reported to the client.
	 */
	fun disable() : io.reactivex.Flowable<pl.wendigo.chrome.GenericResponse> {
        return connection.runAndCaptureResponse("$domainName.disable", null, pl.wendigo.chrome.GenericResponse::class.java)
	}

	/**
	 * Does nothing.
	 */
	fun clearMessages() : io.reactivex.Flowable<pl.wendigo.chrome.GenericResponse> {
        return connection.runAndCaptureResponse("$domainName.clearMessages", null, pl.wendigo.chrome.GenericResponse::class.java)
	}

  /**
   * Issued when new console message is added.
   */
  fun onMessageAdded() : io.reactivex.Flowable<MessageAddedEvent> {
      return connection.captureEvents("$domainName.messageAdded", MessageAddedEvent::class.java)
  }

  companion object {
    private const val domainName = "Console"
  }
}

data class MessageAddedEvent (
  /**
   * Console message that has been added.
   */
  val message : ConsoleMessage

)

