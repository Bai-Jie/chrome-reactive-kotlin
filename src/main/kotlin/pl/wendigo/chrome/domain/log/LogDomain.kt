package pl.wendigo.chrome.domain.log

/**
 * Provides access to log entries.
 *
 * This class was autogenerated by main.go. Do not edit :)
 */
@pl.wendigo.chrome.ProtocolExperimental class LogDomain internal constructor(private val connection : pl.wendigo.chrome.RemoteChromeConnection) {

	/**
	 * Enables log domain, sends the entries collected so far to the client by means of the <code>entryAdded</code> notification.
	 */
	fun enable() : io.reactivex.Flowable<pl.wendigo.chrome.GenericResponse> {
        return connection.runAndCaptureResponse("$domainName.enable", null, pl.wendigo.chrome.GenericResponse::class.java)
	}

	/**
	 * Disables log domain, prevents further log entries from being reported to the client.
	 */
	fun disable() : io.reactivex.Flowable<pl.wendigo.chrome.GenericResponse> {
        return connection.runAndCaptureResponse("$domainName.disable", null, pl.wendigo.chrome.GenericResponse::class.java)
	}

	/**
	 * Clears the log.
	 */
	fun clear() : io.reactivex.Flowable<pl.wendigo.chrome.GenericResponse> {
        return connection.runAndCaptureResponse("$domainName.clear", null, pl.wendigo.chrome.GenericResponse::class.java)
	}

	/**
	 * start violation reporting.
	 */
	fun startViolationsReport(input : StartViolationsReportRequest) : io.reactivex.Flowable<pl.wendigo.chrome.GenericResponse> {
        return connection.runAndCaptureResponse("$domainName.startViolationsReport", input, pl.wendigo.chrome.GenericResponse::class.java)
	}

	/**
	 * Stop violation reporting.
	 */
	fun stopViolationsReport() : io.reactivex.Flowable<pl.wendigo.chrome.GenericResponse> {
        return connection.runAndCaptureResponse("$domainName.stopViolationsReport", null, pl.wendigo.chrome.GenericResponse::class.java)
	}

  /**
   * Issued when new message was logged.
   */
  fun onEntryAdded() : io.reactivex.Flowable<EntryAddedEvent> {
      return connection.captureEvents("$domainName.entryAdded", EntryAddedEvent::class.java)
  }

  companion object {
    private const val domainName = "Log"
  }
}

data class StartViolationsReportRequest (
    /**
     * Configuration for violations.
     */
    val config : Array<ViolationSetting>

)

data class EntryAddedEvent (
  /**
   * The entry.
   */
  val entry : LogEntry

)

